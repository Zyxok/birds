import os

from demo import constants


def csv_parser_assertions():
    """ Do not use this, it's quicker and easier to use the values below """
    videos = {}
    with open(constants.Path.DATA_CONDENSED, 'r') as f:
        for line in f.readlines():
            id_num, species = line.rstrip().split(',')
            videos[id_num] = species

    ids = list(videos.keys())
    ids.sort()
    assert ids == SORTED_IDS
    labels = []
    for id_num in ids:
        labels.append(constants.SPECIES.index(videos.get(id_num)))

    assert labels == SORTED_LABELS

def get_frames_each():
    fr=[]
    for path in VIDEO_DIR_SORTED_PATHS:
        fr.append(len(os.listdir(path)))
    print(fr)


SORTED_LABELS = [6, 6, 6, 0, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 1, 1, 1, 1, 0, 0, 0, 0, 4, 4, 0, 4, 4, 0, 10, 10, 10,
                 7, 1, 7, 7, 7, 7, 12, 12, 12, 12, 8, 8, 8, 8, 8, 12, 0, 0, 0, 12, 5, 5, 2, 2, 2, 2, 9, 9, 1, 4, 4,
                 4, 2, 8, 10, 10, 10, 11, 6, 6, 6, 6, 6, 10, 10, 10, 10, 10, 3, 0, 3, 3, 5, 6, 6, 6, 6, 6, 6, 6, 6,
                 1, 1, 1, 1, 12, 12, 2, 11, 11, 11, 12, 5, 2, 2, 2, 12, 12, 2, 2, 2, 2, 2, 0, 0, 12, 12, 12, 12,
                 12, 12, 12, 12, 12, 12, 11, 12, 12, 11, 11, 11, 9, 9, 9, 1, 1, 8, 11, 11, 11, 11, 11, 11, 4, 10,
                 4, 4, 4, 8, 11, 11, 11, 12, 10, 7, 7, 5, 5, 5, 5, 5, 5, 4, 4, 4, 12, 11, 0, 6, 6, 3, 3, 3, 3, 9,
                 3, 3, 3, 2, 3, 3, 3, 3, 6, 1]

SORTED_IDS = ['446686', '446716', '446718', '447422', '447999', '448003', '448007', '448008', '448009', '448010',
              '448011', '448013', '448014', '448023', '448024', '455105', '455106', '455111', '455112', '455124',
              '455128', '455129', '455130', '455138', '455139', '455158', '455159', '455160', '455162', '461254',
              '461255', '461256', '462880', '463150', '463871', '463874', '463875', '464303', '465776', '465777',
              '465778', '465781', '468204', '468205', '468210', '468212', '468220', '469356', '469719', '469720',
              '469721', '469722', '469726', '469727', '471092', '471102', '471105', '471107', '471223', '471224',
              '472253', '472323', '472324', '472325', '472349', '474278', '474400', '474401', '474402', '474962',
              '475023', '475024', '475025', '475026', '475101', '475301', '475304', '475307', '475327', '475347',
              '475674', '475693', '475744', '475745', '476468', '477665', '477666', '477667', '477668', '477669',
              '477675', '477676', '477710', '477935', '477938', '477939', '477940', '478453', '478454', '478898',
              '478921', '478922', '478923', '479862', '480410', '481085', '481106', '481108', '481186', '481187',
              '481232', '481247', '481371', '481376', '481380', '482488', '482490', '482569', '482575', '482578',
              '482579', '482580', '482581', '482582', '482583', '482584', '482626', '482880', '482882', '482893',
              '482894', '482897', '482933', '483097', '483098', '483099', '483467', '483468', '483476', '483480',
              '483495', '483496', '483497', '483498', '483813', '483821', '483872', '483898', '483899', '483901',
              '483906', '483937', '483947', '483948', '484067', '484194', '484415', '484416', '484501', '484502',
              '484503', '484504', '484768', '484770', '485230', '485232', '485233', '486124', '486167', '486185',
              '486338', '486339', '487311', '487312', '487711', '487712', '487726', '487730', '487737', '487740',
              '487745', '487756', '487917', '487929', '487930', '722701', '723925']

VIDEO_DIR_SORTED_PATHS = list(map(lambda s: os.path.join(constants.Path.FRAMES, s), SORTED_IDS))

SORTED_FRAMES = [753, 607, 845, 2063, 3914, 597, 2287, 2888, 929, 491, 1476, 2240, 961, 1127, 1449, 2624, 1549, 895,
                 868, 1592, 2386, 2040, 331, 670, 270, 898, 4189, 3316, 1145, 618, 862, 1155, 839, 1228, 1460, 404, 939,
                 438, 2364, 2176, 447, 5169, 693, 385, 289, 375, 423, 981, 554, 228, 991, 4258, 468, 1022, 3721, 650,
                 1685, 787, 7698, 6408, 749, 2714, 1259, 2159, 1206, 754, 1123, 2048, 288, 1102, 2356, 1008, 2414, 661,
                 1045, 1128, 1405, 2366, 667, 756, 2103, 741, 424, 999, 841, 1045, 1076, 900, 2051, 3354, 1505, 2924,
                 5461, 2296, 2967, 814, 1319, 1268, 2777, 684, 1221, 656, 1266, 2990, 1203, 580, 556, 1809, 2595, 1253,
                 918, 655, 1743, 1974, 539, 350, 814, 3614, 1126, 1808, 2114, 2638, 2944, 3654, 2268, 396, 1328, 2201,
                 204, 644, 2401, 4544, 1846, 787, 119, 715, 2414, 1996, 1131, 265, 382, 2054, 1438, 1336, 1230, 2216,
                 1867, 982, 1244, 1421, 3371, 898, 2006, 1379, 1004, 1707, 3228, 3163, 2758, 1135, 1611, 494, 2092, 803,
                 5706, 2982, 872, 2001, 1720, 2264, 1021, 1939, 578, 956, 625, 758, 1748, 515, 2096, 2521, 412, 1522,
                 312, 764, 929, 183, 1316]
